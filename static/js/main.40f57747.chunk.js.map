{"version":3,"sources":["index.jsx"],"names":["Calculator","props","state","calc","onKeyDown","bind","onKeyClick","document","addEventListener","this","e","key","toLowerCase","console","log","newCalc","calcAlgo","setState","target","innerText","display","join","id","KEYS","map","className","onClick","content","React","Component","lastNumber","length","isNaN","newNumber","concat","slice","indexOf","result","Number","i","toPrecision","toString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40f57747.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calc: [\"0\"],\n    };\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyClick = this.onKeyClick.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  onKeyDown(e) {\n    const key = e.key.toLowerCase();\n    console.log(key);\n    const newCalc = calcAlgo(this.state.calc, key);\n    this.setState({ calc: newCalc });\n  }\n\n  onKeyClick(e) {\n    const key = e.target.innerText;\n    const newCalc = calcAlgo(this.state.calc, key);\n    this.setState({ calc: newCalc });\n  }\n\n  render() {\n    const display = this.state.calc.join(\" \");\n    return (\n      <div id=\"main-container\">\n        <div id=\"display\">{display}</div>\n        {KEYS.map((e) => (\n          <div key={e.id} className=\"btn\" id={e.id} onClick={this.onKeyClick}>\n            {e.content}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nfunction calcAlgo(calc, key) {\n  const lastNumber = calc[calc.length - 1];\n  //KEY ENTERED IS A NUMBER?\n  if (!isNaN(key)) {\n    const newNumber = lastNumber !== \"0\" ? lastNumber.concat(key) : key;\n    const newCalc = calc.slice(0, calc.length - 1).concat(newNumber);\n    return newCalc;\n  }\n  //KEY ENTERED IS A DOT?\n  else if (key === \".\" && lastNumber.indexOf(\".\") === -1) {\n    const newNumber =\n      lastNumber !== \"-\"\n        ? lastNumber.concat(key)\n        : lastNumber.concat(\"0\" + key);\n    const newCalc = calc.slice(0, calc.length - 1).concat(newNumber);\n    return newCalc;\n  }\n  //KEY ENTERED IS AN OPERATOR?\n  else if (key === \"+\" || key === \"*\" || key === \"/\" || key === \"-\") {\n    if (!isNaN(lastNumber) && lastNumber !== \"0\") {\n      const newCalc = calc.concat([key, \"0\"]);\n      return newCalc;\n    } else if (lastNumber === \"-\" || (lastNumber === \"0\" && key !== \"-\")) {\n      const newCalc = calc.slice(0, calc.length - 2).concat([key, \"0\"]);\n      return newCalc;\n    } else {\n      const newCalc = calc.slice(0, calc.length - 1).concat(key);\n      return newCalc;\n    }\n  }\n  //KEY ENTERED IS EQUAL OR ENTER?\n  else if (key === \"=\" || key === \"enter\") {\n    let result = Number(calc[0]);\n    for (let i = 1; i < calc.length; i = i + 2) {\n      switch (calc[i]) {\n        case \"+\":\n          result += Number(calc[i + 1]);\n          break;\n        case \"-\":\n          result -= Number(calc[i + 1]);\n          break;\n        case \"*\":\n          result *= Number(calc[i + 1]);\n          break;\n        case \"/\":\n          result /= Number(calc[i + 1]);\n          break;\n      }\n    }\n    const finalResult = Number(result.toPrecision(9));\n    return [finalResult.toString()];\n  }\n  //KEY ENTERED IS CLEAR OR SUPR?\n  else if (key === \"AC\" || key === \"delete\") {\n    return [\"0\"];\n  }\n  //KEY ENTERED IS BACKSPACE?\n  else if (key === \"backspace\" || key === \"B\") {\n    if (calc.length > 1 && lastNumber.length === 1) {\n      const newCalc = calc.slice(0, calc.length - 1);\n      return newCalc;\n    } else if (lastNumber.length > 1) {\n      const newNumber = lastNumber.slice(0, lastNumber.length - 1);\n      const newCalc = calc.slice(0, calc.length - 1).concat(newNumber);\n      return newCalc;\n    } else {\n      return [\"0\"];\n    }\n  }\n  return calc;\n}\n\nconst KEYS = [\n  { id: \"zero\", content: \"0\" },\n  { id: \"one\", content: \"1\" },\n  { id: \"two\", content: \"2\" },\n  { id: \"three\", content: \"3\" },\n  { id: \"four\", content: \"4\" },\n  { id: \"five\", content: \"5\" },\n  { id: \"six\", content: \"6\" },\n  { id: \"seven\", content: \"7\" },\n  { id: \"eight\", content: \"8\" },\n  { id: \"nine\", content: \"9\" },\n  { id: \"decimal\", content: \".\" },\n  { id: \"add\", content: \"+\" },\n  { id: \"subtract\", content: \"-\" },\n  { id: \"multiply\", content: \"*\" },\n  { id: \"divide\", content: \"/\" },\n  { id: \"clear\", content: \"AC\" },\n  { id: \"equals\", content: \"=\" },\n  { id: \"backspace\", content: \"B\" },\n];\n\n// ========================================\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}